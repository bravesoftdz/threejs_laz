unit threejs;

interface
{$mode objfpc}
{$modeswitch externalclass}

uses
  js,web;


type
  TJSTHREE = Class external name 'THREE'
  Public
    function Ib(arg1: JSValue;arg2: JSValue;arg3: JSValue) : JSValue;
    function jb(arg1: JSValue;arg2: JSValue;arg3: JSValue) : JSValue;
    function be(arg1: JSValue) : JSValue;
    ShaderLib : TJSObject;
    UniformsLib : TJSObject;
    UniformsUtils : TJSObject;
    ShaderChunk : TJSObject;
    DefaultLoadingManager : TJSObject;
    function ge(arg1: JSValue;arg2: JSValue;arg3: JSValue) : JSValue;
    function fd(arg1: JSValue) : JSValue;
    function me(arg1: JSValue) : JSValue;
    function wf(arg1: JSValue) : JSValue;
    function Ia(arg1: JSValue) : JSValue;
    function jd() : JSValue;
    LoaderUtils : TJSObject;
    Cache : TJSObject;
    AudioContext : TJSObject;
    AnimationUtils : TJSObject;
    Math : TJSObject;
    ImageUtils : TJSObject;
    ShapeUtils : TJSObject;
    REVISION : string;
    MOUSE : TJSObject;
    CullFaceNone : double;
    CullFaceBack : double;
    CullFaceFront : double;
    CullFaceFrontBack : double;
    FrontFaceDirectionCW : double;
    FrontFaceDirectionCCW : double;
    BasicShadowMap : double;
    PCFShadowMap : double;
    PCFSoftShadowMap : double;
    FrontSide : double;
    BackSide : double;
    DoubleSide : double;
    FlatShading : double;
    SmoothShading : double;
    NoColors : double;
    FaceColors : double;
    VertexColors : double;
    NoBlending : double;
    NormalBlending : double;
    AdditiveBlending : double;
    SubtractiveBlending : double;
    MultiplyBlending : double;
    CustomBlending : double;
    AddEquation : double;
    SubtractEquation : double;
    ReverseSubtractEquation : double;
    MinEquation : double;
    MaxEquation : double;
    ZeroFactor : double;
    OneFactor : double;
    SrcColorFactor : double;
    OneMinusSrcColorFactor : double;
    SrcAlphaFactor : double;
    OneMinusSrcAlphaFactor : double;
    DstAlphaFactor : double;
    OneMinusDstAlphaFactor : double;
    DstColorFactor : double;
    OneMinusDstColorFactor : double;
    SrcAlphaSaturateFactor : double;
    NeverDepth : double;
    AlwaysDepth : double;
    LessDepth : double;
    LessEqualDepth : double;
    EqualDepth : double;
    GreaterEqualDepth : double;
    GreaterDepth : double;
    NotEqualDepth : double;
    MultiplyOperation : double;
    MixOperation : double;
    AddOperation : double;
    NoToneMapping : double;
    LinearToneMapping : double;
    ReinhardToneMapping : double;
    Uncharted2ToneMapping : double;
    CineonToneMapping : double;
    ACESFilmicToneMapping : double;
    UVMapping : double;
    CubeReflectionMapping : double;
    CubeRefractionMapping : double;
    EquirectangularReflectionMapping : double;
    EquirectangularRefractionMapping : double;
    SphericalReflectionMapping : double;
    CubeUVReflectionMapping : double;
    CubeUVRefractionMapping : double;
    RepeatWrapping : double;
    ClampToEdgeWrapping : double;
    MirroredRepeatWrapping : double;
    NearestFilter : double;
    NearestMipMapNearestFilter : double;
    NearestMipMapLinearFilter : double;
    LinearFilter : double;
    LinearMipMapNearestFilter : double;
    LinearMipMapLinearFilter : double;
    UnsignedByteType : double;
    ByteType : double;
    ShortType : double;
    UnsignedShortType : double;
    IntType : double;
    UnsignedIntType : double;
    FloatType : double;
    HalfFloatType : double;
    UnsignedShort4444Type : double;
    UnsignedShort5551Type : double;
    UnsignedShort565Type : double;
    UnsignedInt248Type : double;
    AlphaFormat : double;
    RGBFormat : double;
    RGBAFormat : double;
    LuminanceFormat : double;
    LuminanceAlphaFormat : double;
    RGBEFormat : double;
    DepthFormat : double;
    DepthStencilFormat : double;
    RedFormat : double;
    RGB_S3TC_DXT1_Format : double;
    RGBA_S3TC_DXT1_Format : double;
    RGBA_S3TC_DXT3_Format : double;
    RGBA_S3TC_DXT5_Format : double;
    RGB_PVRTC_4BPPV1_Format : double;
    RGB_PVRTC_2BPPV1_Format : double;
    RGBA_PVRTC_4BPPV1_Format : double;
    RGBA_PVRTC_2BPPV1_Format : double;
    RGB_ETC1_Format : double;
    RGBA_ASTC_4x4_Format : double;
    RGBA_ASTC_5x4_Format : double;
    RGBA_ASTC_5x5_Format : double;
    RGBA_ASTC_6x5_Format : double;
    RGBA_ASTC_6x6_Format : double;
    RGBA_ASTC_8x5_Format : double;
    RGBA_ASTC_8x6_Format : double;
    RGBA_ASTC_8x8_Format : double;
    RGBA_ASTC_10x5_Format : double;
    RGBA_ASTC_10x6_Format : double;
    RGBA_ASTC_10x8_Format : double;
    RGBA_ASTC_10x10_Format : double;
    RGBA_ASTC_12x10_Format : double;
    RGBA_ASTC_12x12_Format : double;
    LoopOnce : double;
    LoopRepeat : double;
    LoopPingPong : double;
    InterpolateDiscrete : double;
    InterpolateLinear : double;
    InterpolateSmooth : double;
    ZeroCurvatureEnding : double;
    ZeroSlopeEnding : double;
    WrapAroundEnding : double;
    TrianglesDrawMode : double;
    TriangleStripDrawMode : double;
    TriangleFanDrawMode : double;
    LinearEncoding : double;
    sRGBEncoding : double;
    GammaEncoding : double;
    RGBEEncoding : double;
    LogLuvEncoding : double;
    RGBM7Encoding : double;
    RGBM16Encoding : double;
    RGBDEncoding : double;
    BasicDepthPacking : double;
    RGBADepthPacking : double;
    TangentSpaceNormalMap : double;
    ObjectSpaceNormalMap : double;
    function Face4(arg1: JSValue;arg2: JSValue;arg3: JSValue;arg4: JSValue;arg5: JSValue;arg6: JSValue;arg7: JSValue) : JSValue;
    function MeshFaceMaterial(arg1: JSValue) : JSValue;
    function MultiMaterial(arg1: JSValue) : JSValue;
    function PointCloud(arg1: JSValue;arg2: JSValue) : JSValue;
    function Particle(arg1: JSValue) : JSValue;
    function ParticleSystem(arg1: JSValue;arg2: JSValue) : JSValue;
    function PointCloudMaterial(arg1: JSValue) : JSValue;
    function ParticleBasicMaterial(arg1: JSValue) : JSValue;
    function ParticleSystemMaterial(arg1: JSValue) : JSValue;
    function Vertex(arg1: JSValue;arg2: JSValue;arg3: JSValue) : JSValue;
    function DynamicBufferAttribute(arg1: JSValue;arg2: JSValue) : JSValue;
    function Int8Attribute(arg1: JSValue;arg2: JSValue) : JSValue;
    function Uint8Attribute(arg1: JSValue;arg2: JSValue) : JSValue;
    function Uint8ClampedAttribute(arg1: JSValue;arg2: JSValue) : JSValue;
    function Int16Attribute(arg1: JSValue;arg2: JSValue) : JSValue;
    function Uint16Attribute(arg1: JSValue;arg2: JSValue) : JSValue;
    function Int32Attribute(arg1: JSValue;arg2: JSValue) : JSValue;
    function Uint32Attribute(arg1: JSValue;arg2: JSValue) : JSValue;
    function Float32Attribute(arg1: JSValue;arg2: JSValue) : JSValue;
    function Float64Attribute(arg1: JSValue;arg2: JSValue) : JSValue;
    function AxisHelper(arg1: JSValue) : JSValue;
    function BoundingBoxHelper(arg1: JSValue;arg2: JSValue) : JSValue;
    function EdgesHelper(arg1: JSValue;arg2: JSValue) : JSValue;
    function WireframeHelper(arg1: JSValue;arg2: JSValue) : JSValue;
    function XHRLoader(arg1: JSValue) : JSValue;
    function BinaryTextureLoader(arg1: JSValue) : JSValue;
    GeometryUtils : TJSObject;
    function Projector() : JSValue;
    function CanvasRenderer() : JSValue;
    function JSONLoader() : JSValue;
    SceneUtils : TJSObject;
    function LensFlare() : JSValue;
  end;

var
  THREE : TJSTHREE external name 'THREE';
implementation

end.
